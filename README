# Data Structures and Algorithms in C#

This project contains implementations of various data structures and algorithms in C#. The code is organized into different folders based on the data structure or algorithm being implemented.

## Data Structures

- **Linked List**: A linked list is a linear data structure where each element is a separate object and points to the next element. The project includes implementations of a singly linked list and a doubly linked list.

- **Stack**: A stack is a data structure that follows the Last-In-First-Out (LIFO) principle. The project includes an implementation of a stack.

- **Queue**: A queue is a data structure that follows the First-In-First-Out (FIFO) principle. The project includes an implementation of a queue.

- **Binary Search Tree**: A binary search tree is a data structure that allows efficient searching, insertion, and deletion of elements. The project includes an implementation of a binary search tree.

## Algorithms

- **Binary Search**: The project includes an implementation of the binary search algorithm, which is used to find a specific element in a sorted array.

## Usage

To use the code in this project, you can add the necessary namespaces and create instances of the data structures. Here's an example of how to use the linked list:

```csharp
using algo_dsa.LinkedList;

LinkedList linkedList = new LinkedList();
linkedList.InsertFirst(10);
linkedList.InsertFirst(20);
linkedList.InsertFirst(30);

linkedList.DisplayList(); // Should display 30, 20, 10